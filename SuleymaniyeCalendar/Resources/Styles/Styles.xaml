<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls">

    <!--  Cross-platform FontAwesome family resolution via alias  -->
    <x:String x:Key="IconFontFamily">FontAwesomeSolid</x:String>

    <!--  Consistent Dynamic Font Size System  -->

    <!--  Base control styles (kept)  -->
    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="HeightRequest" Value="48" />
        <Setter Property="WidthRequest" Value="48" />
    </Style>

    <Style TargetType="IndicatorView">
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}" />
    </Style>

    <Style TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="StrokeShape" Value="RoundRectangle 16" />
        <Setter Property="StrokeThickness" Value="1" />
    </Style>

    <Style TargetType="BoxView">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonTextColor}, Dark={StaticResource ButtonTextColorDark}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="14,10" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource White}}" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Editor">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Entry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="WidthRequest" Value="44" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="MinimumHeightRequest" Value="44" />
        <Setter Property="MinimumWidthRequest" Value="44" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--  RadioButton: ensure transparent background to avoid white boxes inside cards  -->
    <Style TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="HorizontalOptions" Value="Start" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--  Base text styles merged into implicit styles above to avoid duplicates  -->

    <x:Double x:Key="DefaultFontSize">14</x:Double>
    <x:Double x:Key="BodyFontSize">11</x:Double>
    <x:Double x:Key="TinyFontSize">9</x:Double>
    <x:Double x:Key="CaptionFontSize">12</x:Double>
    <x:Double x:Key="SubHeaderFontSize">16</x:Double>
    <x:Double x:Key="HeaderFontSize">18</x:Double>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ButtonTextColor}, Dark={StaticResource ButtonTextColorDark}}" />
    </Style>

    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="LineHeight" Value="1.13" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Style.Triggers>
            <Trigger TargetType="Label" Property="IsEnabled" Value="False">
                <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray100}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelSectionHeader" TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="TextColor" Value="{StaticResource White}" />
    </Style>

    <Style x:Key="IconStyle" TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="TextColor" Value="{StaticResource PrimaryAccent100Color}" />
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="14,10" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent100Color}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent100Color}, Dark={StaticResource PrimaryAccent100Color}}" />
                            <Setter Property="BackgroundColor" Value="Transparent" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--  Unified Card (modern)  -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SurfaceVariantColor}, Dark={StaticResource SurfaceVariantColorDark}}" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource OutlineColor}, Dark={StaticResource OutlineColorDark}}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="StrokeShape" Value="RoundRectangle 16" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow
                    Brush="#1A000000"
                    Opacity="0.25"
                    Radius="8"
                    Offset="0,2" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Enhanced Card for current prayer with emphasis  -->
    <Style x:Key="CurrentPrayerCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow
                    Brush="#33000000"
                    Opacity="0.4"
                    Radius="12"
                    Offset="0,4" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Image Button Style -->
    <Style x:Key="ModernImageButton" TargetType="ImageButton">
        <Setter Property="CornerRadius" Value="28" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SurfaceColor}, Dark={StaticResource SurfaceColorDark}}" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow
                    Brush="#1A000000"
                    Opacity="0.15"
                    Radius="12"
                    Offset="0,4" />
            </Setter.Value>
        </Setter>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.95" />
                            <Setter Property="Opacity" Value="0.7" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!--  Unified Round pill (city/month buttons)  -->
    <Style x:Key="RoundButton" TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent400Color}, Dark={StaticResource SecondaryColor}}" />
        <Setter Property="Stroke" Value="Transparent" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="StrokeShape" Value="RoundRectangle 40" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow
                    Brush="#22000000"
                    Opacity="0.6"
                    Radius="12"
                    Offset="0,2" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CTA variants  -->
    <Style
        x:Key="PrimaryButton"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent400Color}, Dark={StaticResource SecondaryColor}}" />
        <Setter Property="TextColor" Value="{StaticResource PrimaryAccent50Color}" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="HorizontalOptions" Value="Fill" />
    </Style>

    <Style
        x:Key="TonalButton"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SurfaceColor}, Dark={StaticResource SurfaceColorDark}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent800Color}, Dark={StaticResource PrimaryAccent50Color}}" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalOptions" Value="Fill" />
    </Style>

    <Style
        x:Key="InfoButton"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource InfoColor}, Dark={StaticResource InfoColorDark}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent50Color}, Dark={StaticResource PrimaryAccent50Color}}" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalOptions" Value="Fill" />
    </Style>

    <Style
        x:Key="WarningButton"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WarningColor}, Dark={StaticResource WarningColorDark}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent50Color}, Dark={StaticResource PrimaryAccent50Color}}" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalOptions" Value="Fill" />
    </Style>

    <Style
        x:Key="OutlineButton"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource OutlineColor}, Dark={StaticResource OutlineColorDark}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent900Color}, Dark={StaticResource PrimaryAccent50Color}}" />
        <Setter Property="CornerRadius" Value="12" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalOptions" Value="Fill" />
    </Style>

    <!--  Card info labels  -->
    <Style x:Key="CardInfoLabel" BasedOn="{StaticResource LabelStyle}" TargetType="Label">
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark={StaticResource PrimaryAccent50Color}}" />
    </Style>

    <Style x:Key="MonthlyTitle" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent900Color}, Dark={StaticResource PrimaryAccent100Color}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light=NavajoWhite, Dark={StaticResource DarkElevation24dp}}" />
    </Style>

    <Style x:Key="MonthlyLabel" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryTextColor}, Dark={StaticResource White}}" />
    </Style>

    <!--  Page background consistent with app theme  -->
    <Style ApplyToDerivedTypes="True" TargetType="Page">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource AppBackgroundColor}, Dark={StaticResource AppBackgroundColorDark}}" />
        <!--  iOS-specific safe area inset handling  -->
        <Setter Property="ios:Page.UseSafeArea" Value="True" />
    </Style>

    <!--  Shell/Tabbar  -->
    <Style ApplyToDerivedTypes="True" TargetType="Shell">
        <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryDarkColor}}" />
        <Setter Property="Shell.ForegroundColor" Value="{OnPlatform WinUI={StaticResource PrimaryColor}, Default={StaticResource White}}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray300}}" />
        <Setter Property="Shell.NavBarHasShadow" Value="False" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource TabBarBgColor}, Dark={StaticResource TabBarBackgroundColorDark}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource TabBarSelectedColor}, Dark={StaticResource TabBarSelectedColor}}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource TabBarSelectedColor}, Dark={StaticResource TabBarSelectedColor}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource TabBarUnselectedColor}, Dark={StaticResource TabBarUnselectedColor}}" />
    </Style>

    <Style TargetType="TabBar">
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryDarkColor}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource TabBarSelectedColor}, Dark={StaticResource TabBarSelectedColor}}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource TabBarSelectedColor}, Dark={StaticResource TabBarSelectedColor}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource TabBarUnselectedColor}, Dark={StaticResource TabBarUnselectedColor}}" />
    </Style>

    <Style TargetType="ShellItem">
        <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource TabBarSelectedColor}, Dark={StaticResource TabBarSelectedColor}}" />
        <Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource TabBarUnselectedColor}, Dark={StaticResource TabBarUnselectedColor}}" />
    </Style>

    <!--  The rest (NavigationPage, TabbedPage, Pickers, etc.) remain as in your file  -->

    <!-- Enhanced accessibility styles -->
    <Style x:Key="AccessibleLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="AutomationProperties.IsInAccessibleTree" Value="True" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="MaxLines" Value="12" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryDarkColor}, Dark={StaticResource PrimaryAccent50Color}}" />
    </Style>

    <Style x:Key="AccessibleButton" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="MinimumHeightRequest" Value="48" />
        <Setter Property="MinimumWidthRequest" Value="48" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="AutomationProperties.IsInAccessibleTree" Value="True" />
    </Style>

    <!-- High contrast mode support -->
    <Style x:Key="HighContrastCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray100}}" />
    </Style>

    <!--  Enhanced Typography System  -->
    
    <!-- Typography Scale -->
    <x:Double x:Key="DisplayLarge">57</x:Double>
    <x:Double x:Key="DisplayMedium">45</x:Double>
    <x:Double x:Key="DisplaySmall">36</x:Double>
    <x:Double x:Key="HeadlineLarge">32</x:Double>
    <x:Double x:Key="HeadlineMedium">28</x:Double>
    <x:Double x:Key="HeadlineSmall">24</x:Double>
    <x:Double x:Key="TitleLarge">22</x:Double>
    <x:Double x:Key="TitleMedium">16</x:Double>
    <x:Double x:Key="TitleSmall">14</x:Double>
    <x:Double x:Key="LabelLarge">14</x:Double>
    <x:Double x:Key="LabelMedium">12</x:Double>
    <x:Double x:Key="LabelSmall">11</x:Double>
    <x:Double x:Key="BodyLarge">16</x:Double>
    <x:Double x:Key="BodyMedium">14</x:Double>
    <x:Double x:Key="BodySmall">12</x:Double>

    <!-- Enhanced Label Styles -->
    <Style x:Key="DisplayLargeLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontAttributes" Value="None" />
        <Setter Property="LineHeight" Value="1.12" />
    </Style>
    
    <Style x:Key="HeadlineLargeLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontAttributes" Value="None" />
        <Setter Property="LineHeight" Value="1.25" />
    </Style>
    
    <Style x:Key="HeadlineMediumLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontAttributes" Value="None" />
        <Setter Property="LineHeight" Value="1.29" />
    </Style>
    
    <Style x:Key="TitleLargeLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="LineHeight" Value="1.27" />
    </Style>
    
    <Style x:Key="TitleMediumLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="LineHeight" Value="1.5" />
    </Style>
    
    <Style x:Key="BodyLargeLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="LineHeight" Value="1.5" />
    </Style>
    
    <Style x:Key="BodyMediumLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
        <Setter Property="LineHeight" Value="1.23" />
    </Style>
    
    <Style x:Key="LabelLargeLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="LineHeight" Value="1.33" />
    </Style>
    
    <Style x:Key="BodyLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontSize" Value="{DynamicResource BodyFontSize}" />
        <Setter Property="LineHeight" Value="1.23" />
    </Style>

    <!-- Enhanced touch target styles for better accessibility -->
    <Style x:Key="TouchTargetImageButton" TargetType="ImageButton">
        <Setter Property="MinimumHeightRequest" Value="48" />
        <Setter Property="MinimumWidthRequest" Value="48" />
        <Setter Property="Padding" Value="12" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.7" />
                            <Setter Property="Scale" Value="0.95" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.3" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Enhanced switch style with animations -->
    <Style x:Key="AccessibleSwitch" TargetType="Switch">
        <Setter Property="MinimumHeightRequest" Value="48" />
        <Setter Property="MinimumWidthRequest" Value="48" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent50Color}}" />
        <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource PrimaryLightColor}, Dark={StaticResource PrimaryAccent400Color}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent50Color}}" />
                        </VisualState.Setters>
                        <VisualState.StateTriggers>
                            <StateTrigger IsActive="{Binding IsToggled}" />
                        </VisualState.StateTriggers>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Animated Card Styles for Different Contexts -->
    
    <!-- Standard Card with Hover Animation -->
    <Style x:Key="AnimatedCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.0" />
                            <Setter Property="Opacity" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.02" />
                            <Setter Property="Opacity" Value="0.95" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.98" />
                            <Setter Property="Opacity" Value="0.8" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Enhanced Prayer Card with State Animations -->
    <Style x:Key="AnimatedPrayerCard" TargetType="Border" BasedOn="{StaticResource CurrentPrayerCard}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="PrayerStates">
                    <VisualState x:Name="Past">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.7" />
                            <Setter Property="Scale" Value="0.98" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Current">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.02" />
                            <Setter Property="Shadow">
                                <Shadow Brush="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent50Color}}"
                                        Offset="0,4"
                                        Radius="8"
                                        Opacity="0.3" />
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Future">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.0" />
                            <Setter Property="Opacity" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.03" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Settings Card with Subtle Differentiation -->
    <Style x:Key="SettingsCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SurfaceColor}, Dark={StaticResource SurfaceColorDark}}" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource OutlineColor}, Dark={StaticResource OutlineColorDark}}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.01" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource InteractiveHoverColor}, Dark={StaticResource InteractiveHoverColorDark}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- List Item Card for Tables -->
    <Style x:Key="ListItemCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SurfaceVariantColor}, Dark={StaticResource SurfaceVariantColorDark}}" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource OutlineColor}, Dark={StaticResource OutlineColorDark}}" />
        <Setter Property="StrokeThickness" Value="0.5" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource InteractiveHoverColor}, Dark={StaticResource InteractiveHoverColorDark}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Media Card for Radio/Audio -->
    <Style x:Key="MediaCard" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryAccent50Color}, Dark={StaticResource DarkElevation8dp}}" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent400Color}}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.02" />
                            <Setter Property="Shadow">
                                <Shadow Brush="{AppThemeBinding Light={StaticResource PrimaryColor}, Dark={StaticResource PrimaryAccent50Color}}"
                                        Offset="0,2"
                                        Radius="6"
                                        Opacity="0.2" />
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

</ResourceDictionary>
